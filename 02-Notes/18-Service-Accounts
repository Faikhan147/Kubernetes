What is Service Accounts ?

It helps to provide the permission to a particular resource like pods, services, secrets, configmap


Example: 1. service-accounts.yaml-->granting read-only access to Pods, Secrets, and ConfigMaps


apiVersion: v1
kind: ServiceAccount
metadata:
  name: read-only-sa
  namespace: default  # Change namespace if needed



Example: 2. role.yaml


apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: read-only-role
  namespace: default  # Change namespace if needed
rules:
  - apiGroups: [""]
    resources: ["pods", "secrets", "configmaps"]
    verbs: ["get", "list", "watch"]



Example: 3. role-binding.yaml


apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-only-rolebinding
  namespace: default  # Change namespace if needed
subjects:
  - kind: ServiceAccount
    name: read-only-sa
    namespace: default
roleRef:
  kind: Role
  name: read-only-role
  apiGroup: rbac.authorization.k8s.io



Example : 4. pod.yaml


apiVersion: v1
kind: Pod
metadata:
  name: read-only-pod
  namespace: default  # Change namespace if needed
spec:
  serviceAccountName: read-only-sa  # Attach the ServiceAccount
  containers:
    - name: busybox
      image: busybox
      command: ["sleep", "3600"]




NOTE: "Secrets" aur "Configmaps" ko lowercase "secrets", "configmaps" likhna chahiye. ServiceAccount pod ke sath attach ki gayi hai for read-only access.
